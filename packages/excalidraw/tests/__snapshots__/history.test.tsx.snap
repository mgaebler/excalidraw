// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and the arrow got bound to a different element in the meantime > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id159": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id159": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and the arrow got bound to a different element in the meantime > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id157",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 18,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and the arrow got bound to a different element in the meantime > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id158",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 19,
  "width": 100,
  "x": 100,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and the arrow got bound to a different element in the meantime > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "elbowed": false,
  "endArrowhead": "arrow",
  "endBinding": {
    "elementId": "id162",
    "fixedPoint": [
      "0.50000",
      1,
    ],
    "focus": 0,
    "gap": 1,
  },
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": "102.35417",
  "id": "id159",
  "index": "a2",
  "isDeleted": false,
  "lastCommittedPoint": null,
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      "101.77517",
      "102.35417",
    ],
  ],
  "roughness": 1,
  "roundness": {
    "type": 2,
  },
  "startArrowhead": null,
  "startBinding": null,
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "arrow",
  "updated": 1,
  "version": 40,
  "width": "101.77517",
  "x": "0.70711",
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and the arrow got bound to a different element in the meantime > [end of test] element 3 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id159",
      "type": "arrow",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 50,
  "id": "id162",
  "index": "a3",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 6,
  "width": 50,
  "x": 100,
  "y": 100,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and the arrow got bound to a different element in the meantime > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id159" => Delta {
            "deleted": {
              "endBinding": {
                "elementId": "id158",
                "focus": "0.00990",
                "gap": 1,
              },
              "height": "0.98586",
              "points": [
                [
                  0,
                  0,
                ],
                [
                  "98.58579",
                  "-0.98586",
                ],
              ],
              "startBinding": {
                "elementId": "id157",
                "focus": "0.02970",
                "gap": 1,
              },
            },
            "inserted": {
              "endBinding": {
                "elementId": "id158",
                "focus": "-0.02000",
                "gap": 1,
              },
              "height": "0.00000",
              "points": [
                [
                  0,
                  0,
                ],
                [
                  "98.58579",
                  "0.00000",
                ],
              ],
              "startBinding": {
                "elementId": "id157",
                "focus": "0.02000",
                "gap": 1,
              },
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id157" => Delta {
            "deleted": {
              "boundElements": [],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "id159",
                  "type": "arrow",
                },
              ],
            },
          },
          "id158" => Delta {
            "deleted": {
              "boundElements": [],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "id159",
                  "type": "arrow",
                },
              ],
            },
          },
          "id159" => Delta {
            "deleted": {
              "endBinding": {
                "elementId": "id162",
                "fixedPoint": [
                  "0.50000",
                  1,
                ],
                "focus": 0,
                "gap": 1,
              },
              "height": "102.35417",
              "points": [
                [
                  0,
                  0,
                ],
                [
                  "101.77517",
                  "102.35417",
                ],
              ],
              "startBinding": null,
              "y": 0,
            },
            "inserted": {
              "endBinding": {
                "elementId": "id158",
                "focus": "0.00990",
                "gap": 1,
              },
              "height": "0.98586",
              "points": [
                [
                  0,
                  0,
                ],
                [
                  "98.58579",
                  "-0.98586",
                ],
              ],
              "startBinding": {
                "elementId": "id157",
                "focus": "0.02970",
                "gap": 1,
              },
              "y": "0.99364",
            },
          },
          "id162" => Delta {
            "deleted": {
              "boundElements": [
                {
                  "id": "id159",
                  "type": "arrow",
                },
              ],
            },
            "inserted": {
              "boundElements": [],
            },
          },
        },
      },
    },
  ],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id157" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id158" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id159": true,
            },
            "selectedLinearElementId": "id159",
          },
          "inserted": {
            "selectedElementIds": {},
            "selectedLinearElementId": null,
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id159" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "elbowed": false,
              "endArrowhead": "arrow",
              "endBinding": null,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 0,
              "index": "a2",
              "isDeleted": false,
              "lastCommittedPoint": null,
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  100,
                  0,
                ],
              ],
              "roughness": 1,
              "roundness": {
                "type": 2,
              },
              "startArrowhead": null,
              "startBinding": null,
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "arrow",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and the arrow got bound to a different element in the meantime > [end of test] number of elements 1`] = `4`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and the arrow got bound to a different element in the meantime > [end of test] number of renders 1`] = `21`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and there are no conflicting updates in the meantime > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id154": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id154": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and there are no conflicting updates in the meantime > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id152",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 9,
  "width": 100,
  "x": 150,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and there are no conflicting updates in the meantime > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id153",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 9,
  "width": 100,
  "x": 150,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and there are no conflicting updates in the meantime > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "elbowed": false,
  "endArrowhead": "arrow",
  "endBinding": null,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 0,
  "id": "id154",
  "index": "a2",
  "isDeleted": false,
  "lastCommittedPoint": null,
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      100,
      0,
    ],
  ],
  "roughness": 1,
  "roundness": {
    "type": 2,
  },
  "startArrowhead": null,
  "startBinding": null,
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "arrow",
  "updated": 1,
  "version": 30,
  "width": 50,
  "x": 200,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and there are no conflicting updates in the meantime > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id154" => Delta {
            "deleted": {
              "points": [
                [
                  0,
                  0,
                ],
                [
                  50,
                  0,
                ],
              ],
            },
            "inserted": {
              "points": [
                [
                  0,
                  0,
                ],
                [
                  100,
                  0,
                ],
              ],
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id152" => Delta {
            "deleted": {
              "boundElements": [],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "id154",
                  "type": "arrow",
                },
              ],
            },
          },
          "id153" => Delta {
            "deleted": {
              "boundElements": [],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "id154",
                  "type": "arrow",
                },
              ],
            },
          },
          "id154" => Delta {
            "deleted": {
              "endBinding": null,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  100,
                  0,
                ],
              ],
              "startBinding": null,
            },
            "inserted": {
              "endBinding": {
                "elementId": "id153",
                "focus": -0,
                "gap": 1,
              },
              "points": [
                [
                  0,
                  0,
                ],
                [
                  50,
                  0,
                ],
              ],
              "startBinding": {
                "elementId": "id152",
                "focus": 0,
                "gap": 1,
              },
            },
          },
        },
      },
    },
  ],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id152" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id153" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id154": true,
            },
            "selectedLinearElementId": "id154",
          },
          "inserted": {
            "selectedElementIds": {},
            "selectedLinearElementId": null,
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id154" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "elbowed": false,
              "endArrowhead": "arrow",
              "endBinding": null,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 0,
              "index": "a2",
              "isDeleted": false,
              "lastCommittedPoint": null,
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  100,
                  0,
                ],
              ],
              "roughness": 1,
              "roundness": {
                "type": 2,
              },
              "startArrowhead": null,
              "startBinding": null,
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "arrow",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and there are no conflicting updates in the meantime > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind bindings when both are updated through the history and there are no conflicting updates in the meantime > [end of test] number of renders 1`] = `23`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added arrow when it's bindable elements are added through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added arrow when it's bindable elements are added through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "elbowed": false,
  "endArrowhead": null,
  "endBinding": {
    "elementId": "id164",
    "fixedPoint": [
      "0.50000",
      1,
    ],
    "focus": 0,
    "gap": 1,
  },
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": "1.30038",
  "id": "id165",
  "index": "Zz",
  "isDeleted": false,
  "lastCommittedPoint": null,
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      "98.58579",
      "1.30038",
    ],
  ],
  "roughness": 1,
  "roundness": {
    "type": 2,
  },
  "startArrowhead": null,
  "startBinding": {
    "elementId": "id163",
    "fixedPoint": [
      1,
      "0.50000",
    ],
    "focus": 0,
    "gap": 1,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "arrow",
  "updated": 1,
  "version": 11,
  "width": "98.58579",
  "x": "0.70711",
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added arrow when it's bindable elements are added through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id165",
      "type": "arrow",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id163",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 7,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added arrow when it's bindable elements are added through the history > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id165",
      "type": "arrow",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id164",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 7,
  "width": 100,
  "x": 100,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added arrow when it's bindable elements are added through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id163" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id164" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {
          "id165" => Delta {
            "deleted": {
              "endBinding": {
                "elementId": "id164",
                "fixedPoint": [
                  "0.50000",
                  1,
                ],
                "focus": 0,
                "gap": 1,
              },
              "startBinding": {
                "elementId": "id163",
                "fixedPoint": [
                  1,
                  "0.50000",
                ],
                "focus": 0,
                "gap": 1,
              },
            },
            "inserted": {
              "endBinding": null,
              "startBinding": null,
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added arrow when it's bindable elements are added through the history > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added arrow when it's bindable elements are added through the history > [end of test] number of renders 1`] = `9`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added bindable elements when it's arrow is added through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added bindable elements when it's arrow is added through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "elbowed": false,
  "endArrowhead": null,
  "endBinding": {
    "elementId": "id167",
    "fixedPoint": [
      1,
      "0.50000",
    ],
    "focus": 0,
    "gap": 1,
  },
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": "1.30038",
  "id": "id168",
  "index": "a0",
  "isDeleted": false,
  "lastCommittedPoint": null,
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      "98.58579",
      "1.30038",
    ],
  ],
  "roughness": 1,
  "roundness": {
    "type": 2,
  },
  "startArrowhead": null,
  "startBinding": {
    "elementId": "id166",
    "fixedPoint": [
      "0.50000",
      1,
    ],
    "focus": 0,
    "gap": 1,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "arrow",
  "updated": 1,
  "version": 11,
  "width": "98.58579",
  "x": "0.70711",
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added bindable elements when it's arrow is added through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id168",
      "type": "arrow",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id166",
  "index": "a0V",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 12,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added bindable elements when it's arrow is added through the history > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id168",
      "type": "arrow",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id167",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 11,
  "width": 100,
  "x": 100,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added bindable elements when it's arrow is added through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id168" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "elbowed": false,
              "endArrowhead": null,
              "endBinding": {
                "elementId": "id167",
                "fixedPoint": [
                  1,
                  "0.50000",
                ],
                "focus": 0,
                "gap": 1,
              },
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": "11.27227",
              "index": "a0",
              "isDeleted": false,
              "lastCommittedPoint": null,
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  "98.58579",
                  "11.27227",
                ],
              ],
              "roughness": 1,
              "roundness": {
                "type": 2,
              },
              "startArrowhead": null,
              "startBinding": {
                "elementId": "id166",
                "fixedPoint": [
                  "0.50000",
                  1,
                ],
                "focus": 0,
                "gap": 1,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "arrow",
              "width": "98.58579",
              "x": "0.70711",
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {
          "id166" => Delta {
            "deleted": {
              "boundElements": [
                {
                  "id": "id168",
                  "type": "arrow",
                },
              ],
            },
            "inserted": {
              "boundElements": [],
            },
          },
          "id167" => Delta {
            "deleted": {
              "boundElements": [
                {
                  "id": "id168",
                  "type": "arrow",
                },
              ],
            },
            "inserted": {
              "boundElements": [],
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added bindable elements when it's arrow is added through the history > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should rebind remotely added bindable elements when it's arrow is added through the history > [end of test] number of renders 1`] = `11`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should unbind remotely deleted bindable elements from arrow when the arrow is added through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should unbind remotely deleted bindable elements from arrow when the arrow is added through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id169",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should unbind remotely deleted bindable elements from arrow when the arrow is added through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id170",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 100,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should unbind remotely deleted bindable elements from arrow when the arrow is added through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id169" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id170" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should unbind remotely deleted bindable elements from arrow when the arrow is added through the history > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should unbind remotely deleted bindable elements from arrow when the arrow is added through the history > [end of test] number of renders 1`] = `4`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should update bound element points when rectangle was remotely moved and arrow is added back through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id173": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should update bound element points when rectangle was remotely moved and arrow is added back through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id173",
      "type": "arrow",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id171",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 7,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should update bound element points when rectangle was remotely moved and arrow is added back through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id173",
      "type": "arrow",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id172",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 8,
  "width": 100,
  "x": 500,
  "y": -500,
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should update bound element points when rectangle was remotely moved and arrow is added back through the history > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "elbowed": false,
  "endArrowhead": "arrow",
  "endBinding": {
    "elementId": "id172",
    "focus": -0,
    "gap": 1,
  },
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": "374.05754",
  "id": "id173",
  "index": "a2",
  "isDeleted": false,
  "lastCommittedPoint": null,
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      "502.78936",
      "-374.05754",
    ],
  ],
  "roughness": 1,
  "roundness": {
    "type": 2,
  },
  "startArrowhead": null,
  "startBinding": {
    "elementId": "id171",
    "focus": 0,
    "gap": 1,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "arrow",
  "updated": 1,
  "version": 10,
  "width": "502.78936",
  "x": "-0.83465",
  "y": "-36.58211",
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should update bound element points when rectangle was remotely moved and arrow is added back through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id171" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id172" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id173": true,
            },
            "selectedLinearElementId": "id173",
          },
          "inserted": {
            "selectedElementIds": {},
            "selectedLinearElementId": null,
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id173" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "elbowed": false,
              "endArrowhead": "arrow",
              "endBinding": {
                "elementId": "id172",
                "focus": -0,
                "gap": 1,
              },
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 0,
              "index": "a2",
              "isDeleted": false,
              "lastCommittedPoint": null,
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  100,
                  0,
                ],
              ],
              "roughness": 1,
              "roundness": {
                "type": 2,
              },
              "startArrowhead": null,
              "startBinding": {
                "elementId": "id171",
                "focus": 0,
                "gap": 1,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "arrow",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {
          "id171" => Delta {
            "deleted": {
              "boundElements": [
                {
                  "id": "id173",
                  "type": "arrow",
                },
              ],
            },
            "inserted": {
              "boundElements": [],
            },
          },
          "id172" => Delta {
            "deleted": {
              "boundElements": [
                {
                  "id": "id173",
                  "type": "arrow",
                },
              ],
            },
            "inserted": {
              "boundElements": [],
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should update bound element points when rectangle was remotely moved and arrow is added back through the history > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > conflicts in arrows and their bindable elements > should update bound element points when rectangle was remotely moved and arrow is added back through the history > [end of test] number of renders 1`] = `9`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the container is added through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the container is added through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id140",
      "type": "text",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id138",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 7,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the container is added through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": null,
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id139",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 6,
  "verticalAlign": "top",
  "width": 100,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the container is added through the history > [end of test] element 2 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id138",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 25,
  "id": "id140",
  "index": "a2",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "ola",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "ola",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 11,
  "verticalAlign": "top",
  "width": 30,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the container is added through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id138" => Delta {
            "deleted": {
              "isDeleted": false,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 10,
              "y": 10,
            },
          },
          "id139" => Delta {
            "deleted": {
              "containerId": null,
            },
            "inserted": {
              "containerId": null,
            },
          },
        },
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the container is added through the history > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the container is added through the history > [end of test] number of renders 1`] = `11`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the text is added through history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the text is added through history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id143",
      "type": "text",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id141",
  "index": "Zz",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 11,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the text is added through history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id141",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id142",
  "index": "a0",
  "isDeleted": true,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 9,
  "verticalAlign": "top",
  "width": 100,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the text is added through history > [end of test] element 2 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id141",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 25,
  "id": "id143",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "ola",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "ola",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 11,
  "verticalAlign": "top",
  "width": 30,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the text is added through history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "id142" => Delta {
            "deleted": {
              "containerId": "id141",
              "isDeleted": true,
            },
            "inserted": {
              "containerId": null,
              "isDeleted": false,
            },
          },
        },
        "removed": Map {},
        "updated": Map {
          "id141" => Delta {
            "deleted": {
              "boundElements": [],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "id142",
                  "type": "text",
                },
              ],
            },
          },
        },
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the text is added through history > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should preserve latest remotely added binding and unbind previous one when the text is added through history > [end of test] number of renders 1`] = `11`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the container got bound to a different text in the meantime > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the container got bound to a different text in the meantime > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id130",
      "type": "text",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id128",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 10,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the container got bound to a different text in the meantime > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id128",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 25,
  "id": "id130",
  "index": "a0V",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "ola",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "ola",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 7,
  "verticalAlign": "top",
  "width": 30,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the container got bound to a different text in the meantime > [end of test] element 2 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": null,
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 25,
  "id": "id129",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 9,
  "verticalAlign": "top",
  "width": 80,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the container got bound to a different text in the meantime > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id128" => Delta {
            "deleted": {
              "boundElements": [
                {
                  "id": "id130",
                  "type": "text",
                },
              ],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "id129",
                  "type": "text",
                },
              ],
            },
          },
          "id129" => Delta {
            "deleted": {
              "containerId": null,
            },
            "inserted": {
              "containerId": "id128",
            },
          },
          "id130" => Delta {
            "deleted": {
              "containerId": "id128",
            },
            "inserted": {
              "containerId": null,
            },
          },
        },
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the container got bound to a different text in the meantime > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the container got bound to a different text in the meantime > [end of test] number of renders 1`] = `11`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the text got bound to a different container in the meantime > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the text got bound to a different container in the meantime > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id131",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 8,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the text got bound to a different container in the meantime > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id132",
      "type": "text",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 60,
  "id": "id133",
  "index": "a0V",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 8,
  "width": 50,
  "x": 100,
  "y": 100,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the text got bound to a different container in the meantime > [end of test] element 2 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id133",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 50,
  "id": "id132",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que
pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 13,
  "verticalAlign": "top",
  "width": 40,
  "x": 105,
  "y": 105,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the text got bound to a different container in the meantime > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id131" => Delta {
            "deleted": {
              "boundElements": [],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "id132",
                  "type": "text",
                },
              ],
            },
          },
          "id132" => Delta {
            "deleted": {
              "containerId": "id133",
            },
            "inserted": {
              "containerId": "id131",
            },
          },
          "id133" => Delta {
            "deleted": {
              "boundElements": [
                {
                  "id": "id132",
                  "type": "text",
                },
              ],
            },
            "inserted": {
              "boundElements": [],
            },
          },
        },
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the text got bound to a different container in the meantime > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and the text got bound to a different container in the meantime > [end of test] number of renders 1`] = `11`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and there no conflicting updates in the meantime > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and there no conflicting updates in the meantime > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id126",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 9,
  "width": 100,
  "x": 35,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and there no conflicting updates in the meantime > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": null,
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 25,
  "id": "id127",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 10,
  "verticalAlign": "top",
  "width": 80,
  "x": 40,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and there no conflicting updates in the meantime > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id126" => Delta {
            "deleted": {
              "boundElements": [],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "id127",
                  "type": "text",
                },
              ],
            },
          },
          "id127" => Delta {
            "deleted": {
              "containerId": null,
            },
            "inserted": {
              "containerId": "id126",
            },
          },
        },
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and there no conflicting updates in the meantime > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind bindings when both are updated through the history and there no conflicting updates in the meantime > [end of test] number of renders 1`] = `11`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added bound text when it's container is added through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added bound text when it's container is added through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id135",
      "type": "text",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id134",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 7,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added bound text when it's container is added through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id134",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 25,
  "id": "id135",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 12,
  "verticalAlign": "top",
  "width": 80,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added bound text when it's container is added through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id134" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 10,
              "y": 10,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {
          "id135" => Delta {
            "deleted": {
              "containerId": "id134",
            },
            "inserted": {
              "containerId": null,
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added bound text when it's container is added through the history > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added bound text when it's container is added through the history > [end of test] number of renders 1`] = `9`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added container when it's bound text is added through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added container when it's bound text is added through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id137",
      "type": "text",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id136",
  "index": "Zz",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 11,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added container when it's bound text is added through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id136",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 25,
  "id": "id137",
  "index": "a0",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 8,
  "verticalAlign": "top",
  "width": 80,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added container when it's bound text is added through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id137" => Delta {
            "deleted": {
              "angle": 0,
              "autoResize": true,
              "backgroundColor": "transparent",
              "boundElements": null,
              "containerId": "id136",
              "customData": undefined,
              "fillStyle": "solid",
              "fontFamily": 5,
              "fontSize": 20,
              "frameId": null,
              "groupIds": [],
              "height": 25,
              "index": "a0",
              "isDeleted": false,
              "lineHeight": "1.25000",
              "link": null,
              "locked": false,
              "opacity": 100,
              "originalText": "que pasa",
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "text": "que pasa",
              "textAlign": "left",
              "type": "text",
              "verticalAlign": "top",
              "width": 80,
              "x": 15,
              "y": 15,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {
          "id136" => Delta {
            "deleted": {
              "boundElements": [
                {
                  "id": "id137",
                  "type": "text",
                },
              ],
            },
            "inserted": {
              "boundElements": [],
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added container when it's bound text is added through the history > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should rebind remotely added container when it's bound text is added through the history > [end of test] number of renders 1`] = `9`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw bound text to match container dimensions when the bound text is updated through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw bound text to match container dimensions when the bound text is updated through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id151",
      "type": "text",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id150",
  "index": "Zz",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw bound text to match container dimensions when the bound text is updated through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id150",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 25,
  "id": "id151",
  "index": "a0",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 7,
  "verticalAlign": "top",
  "width": 80,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw bound text to match container dimensions when the bound text is updated through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id151" => Delta {
            "deleted": {
              "angle": 0,
              "x": 15,
              "y": 15,
            },
            "inserted": {
              "angle": 0,
              "x": 15,
              "y": 15,
            },
          },
        },
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw bound text to match container dimensions when the bound text is updated through the history > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw bound text to match container dimensions when the bound text is updated through the history > [end of test] number of renders 1`] = `9`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw remotely added bound text when it's container is updated through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw remotely added bound text when it's container is updated through the history > [end of test] element 0 1`] = `
{
  "angle": 90,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id149",
      "type": "text",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id148",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 8,
  "width": 100,
  "x": 200,
  "y": 200,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw remotely added bound text when it's container is updated through the history > [end of test] element 1 1`] = `
{
  "angle": 90,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id148",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 25,
  "id": "id149",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 6,
  "verticalAlign": "top",
  "width": 80,
  "x": 205,
  "y": 205,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw remotely added bound text when it's container is updated through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id148" => Delta {
            "deleted": {
              "angle": 90,
              "x": 200,
              "y": 200,
            },
            "inserted": {
              "angle": 0,
              "x": 10,
              "y": 10,
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw remotely added bound text when it's container is updated through the history > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should redraw remotely added bound text when it's container is updated through the history > [end of test] number of renders 1`] = `10`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted bound text from container when the container is added through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted bound text from container when the container is added through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id144",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 8,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted bound text from container when the container is added through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": "id144",
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id145",
  "index": "a1",
  "isDeleted": true,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 3,
  "verticalAlign": "top",
  "width": 100,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted bound text from container when the container is added through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id144" => Delta {
            "deleted": {
              "boundElements": [],
              "isDeleted": false,
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "id145",
                  "type": "text",
                },
              ],
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted bound text from container when the container is added through the history > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted bound text from container when the container is added through the history > [end of test] number of renders 1`] = `9`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted container from bound text when the text is added through the history > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted container from bound text when the text is added through the history > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [
    {
      "id": "id147",
      "type": "text",
    },
  ],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id146",
  "index": "Zz",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted container from bound text when the text is added through the history > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": null,
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id147",
  "index": "a0",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "que pasa",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "que pasa",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 8,
  "verticalAlign": "top",
  "width": 100,
  "x": 15,
  "y": 15,
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted container from bound text when the text is added through the history > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id147" => Delta {
            "deleted": {
              "containerId": null,
              "isDeleted": false,
            },
            "inserted": {
              "containerId": "id146",
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted container from bound text when the text is added through the history > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > conflicts in bound text elements and their containers > should unbind remotely deleted container from bound text when the text is added through the history > [end of test] number of renders 1`] = `9`;

exports[`history > multiplayer undo/redo > conflicts in frames and their children > should not rebind frame child with frame when frame was remotely deleted and frame child is added back through the history  > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > conflicts in frames and their children > should not rebind frame child with frame when frame was remotely deleted and frame child is added back through the history  > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id175",
  "index": "Zz",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 10,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > conflicts in frames and their children > should not rebind frame child with frame when frame was remotely deleted and frame child is added back through the history  > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 500,
  "id": "id174",
  "index": "a0",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "name": null,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "frame",
  "updated": 1,
  "version": 3,
  "width": 500,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > conflicts in frames and their children > should not rebind frame child with frame when frame was remotely deleted and frame child is added back through the history  > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id175" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "Zz",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 10,
              "y": 10,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id175" => Delta {
            "deleted": {
              "frameId": "id174",
            },
            "inserted": {
              "frameId": null,
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > conflicts in frames and their children > should not rebind frame child with frame when frame was remotely deleted and frame child is added back through the history  > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > conflicts in frames and their children > should not rebind frame child with frame when frame was remotely deleted and frame child is added back through the history  > [end of test] number of renders 1`] = `13`;

exports[`history > multiplayer undo/redo > should iterate through the history when editing group contains only remotely deleted elements > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id103": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when editing group contains only remotely deleted elements > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
  ],
  "height": 100,
  "id": "id102",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 5,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when editing group contains only remotely deleted elements > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
  ],
  "height": 100,
  "id": "id103",
  "index": "a1",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 100,
  "x": 100,
  "y": 100,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when editing group contains only remotely deleted elements > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id102": true,
              "id103": true,
            },
            "selectedGroupIds": {
              "A": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
            "selectedGroupIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id102" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [
                "A",
              ],
              "height": 100,
              "index": "a0",
              "isDeleted": true,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id103" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [
                "A",
              ],
              "height": 100,
              "index": "a1",
              "isDeleted": true,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": 100,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "editingGroupId": "A",
            "selectedElementIds": {},
            "selectedGroupIds": {},
          },
          "inserted": {
            "editingGroupId": null,
            "selectedElementIds": {
              "id102": true,
            },
            "selectedGroupIds": {
              "A": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "editingGroupId": null,
            "selectedElementIds": {},
          },
          "inserted": {
            "editingGroupId": "A",
            "selectedElementIds": {
              "id103": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when editing group contains only remotely deleted elements > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > should iterate through the history when editing group contains only remotely deleted elements > [end of test] number of renders 1`] = `13`;

exports[`history > multiplayer undo/redo > should iterate through the history when element changes relate only to remotely deleted elements > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id91": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when element changes relate only to remotely deleted elements > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id90",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when element changes relate only to remotely deleted elements > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id91",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 20,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when element changes relate only to remotely deleted elements > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id90": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id90" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id91": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id90": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id91" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 20,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when element changes relate only to remotely deleted elements > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > should iterate through the history when element changes relate only to remotely deleted elements > [end of test] number of renders 1`] = `8`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected elements relate only to remotely deleted elements > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id93": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id93": true,
    "id94": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected elements relate only to remotely deleted elements > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id92",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected elements relate only to remotely deleted elements > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id93",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 100,
  "x": 20,
  "y": 20,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected elements relate only to remotely deleted elements > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id94",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 100,
  "x": 30,
  "y": 30,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected elements relate only to remotely deleted elements > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id92": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id92" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 10,
              "y": 10,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id93" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 20,
              "y": 20,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id94" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a2",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 30,
              "y": 30,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id93": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id92": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id94": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected elements relate only to remotely deleted elements > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected elements relate only to remotely deleted elements > [end of test] number of renders 1`] = `15`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected groups contain only remotely deleted elements > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id100": true,
    "id101": true,
    "id98": true,
    "id99": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {
    "A": true,
    "B": true,
  },
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected groups contain only remotely deleted elements > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
  ],
  "height": 100,
  "id": "id98",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected groups contain only remotely deleted elements > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
  ],
  "height": 100,
  "id": "id99",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected groups contain only remotely deleted elements > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "B",
  ],
  "height": 100,
  "id": "id100",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected groups contain only remotely deleted elements > [end of test] element 3 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "B",
  ],
  "height": 100,
  "id": "id101",
  "index": "a3",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected groups contain only remotely deleted elements > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id98": true,
              "id99": true,
            },
            "selectedGroupIds": {
              "A": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
            "selectedGroupIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id100": true,
              "id101": true,
            },
            "selectedGroupIds": {
              "B": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
            "selectedGroupIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected groups contain only remotely deleted elements > [end of test] number of elements 1`] = `4`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected groups contain only remotely deleted elements > [end of test] number of renders 1`] = `15`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected or editing linear element was remotely deleted > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id106": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected or editing linear element was remotely deleted > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "elbowed": false,
  "endArrowhead": "arrow",
  "endBinding": null,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id106",
  "index": "a0",
  "isDeleted": true,
  "lastCommittedPoint": [
    10,
    10,
  ],
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      10,
      10,
    ],
  ],
  "roughness": 1,
  "roundness": {
    "type": 2,
  },
  "startArrowhead": null,
  "startBinding": null,
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "arrow",
  "updated": 1,
  "version": 7,
  "width": 10,
  "x": -10,
  "y": -10,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected or editing linear element was remotely deleted > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id106": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id106" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "elbowed": false,
              "endArrowhead": "arrow",
              "endBinding": null,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "lastCommittedPoint": [
                10,
                10,
              ],
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  10,
                  10,
                ],
              ],
              "roughness": 1,
              "roundness": {
                "type": 2,
              },
              "startArrowhead": null,
              "startBinding": null,
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "arrow",
              "width": 10,
              "x": -10,
              "y": -10,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedLinearElementId": "id106",
          },
          "inserted": {
            "selectedLinearElementId": null,
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "editingLinearElementId": "id106",
          },
          "inserted": {
            "editingLinearElementId": null,
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "editingLinearElementId": null,
          },
          "inserted": {
            "editingLinearElementId": "id106",
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected or editing linear element was remotely deleted > [end of test] number of elements 1`] = `1`;

exports[`history > multiplayer undo/redo > should iterate through the history when selected or editing linear element was remotely deleted > [end of test] number of renders 1`] = `10`;

exports[`history > multiplayer undo/redo > should iterate through the history when when element change relates to remotely deleted element > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id89": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when when element change relates to remotely deleted element > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id89",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when when element change relates to remotely deleted element > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id89": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id89" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when when element change relates to remotely deleted element > [end of test] number of elements 1`] = `1`;

exports[`history > multiplayer undo/redo > should iterate through the history when when element change relates to remotely deleted element > [end of test] number of renders 1`] = `5`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced all indices > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced all indices > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id112",
  "index": "a1",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 8,
  "width": 100,
  "x": 20,
  "y": 20,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced all indices > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id113",
  "index": "a3V",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 100,
  "x": 30,
  "y": 30,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced all indices > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id111",
  "index": "a4",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced all indices > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id112" => Delta {
            "deleted": {
              "index": "a1",
            },
            "inserted": {
              "index": "a3",
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {},
          },
          "inserted": {
            "selectedElementIds": {
              "id112": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "id111" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a4",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 10,
              "y": 10,
            },
          },
          "id112" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a3",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 20,
              "y": 20,
            },
          },
          "id113" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a3V",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 30,
              "y": 30,
            },
          },
        },
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced all indices > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced all indices > [end of test] number of renders 1`] = `11`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced changed indices > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced changed indices > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id107",
  "index": "Zx",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced changed indices > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id109",
  "index": "Zy",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 100,
  "x": 30,
  "y": 30,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced changed indices > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id108",
  "index": "a1",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 7,
  "width": 100,
  "x": 20,
  "y": 20,
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced changed indices > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id108" => Delta {
            "deleted": {
              "index": "a1",
            },
            "inserted": {
              "index": "Zz",
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {},
          },
          "inserted": {
            "selectedElementIds": {
              "id108": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "id107" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "Zx",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 10,
              "y": 10,
            },
          },
          "id108" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "Zz",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 20,
              "y": 20,
            },
          },
          "id109" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "Zy",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 30,
              "y": 30,
            },
          },
        },
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced changed indices > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > should iterate through the history when z-index changes do not produce visible change and we synced changed indices > [end of test] number of renders 1`] = `11`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress dragging > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id120": true,
    "id121": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id120": true,
    "id121": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress dragging > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id120",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 9,
  "width": 10,
  "x": 90,
  "y": 90,
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress dragging > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id121",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 9,
  "width": 10,
  "x": 110,
  "y": 110,
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress dragging > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id125",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#a5d8ff",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress dragging > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id120": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id120" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 10,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id121": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id120": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id121" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 30,
              "y": 30,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id120": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id121": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id121": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id120" => Delta {
            "deleted": {
              "x": 90,
              "y": 90,
            },
            "inserted": {
              "x": 10,
              "y": 10,
            },
          },
          "id121" => Delta {
            "deleted": {
              "x": 110,
              "y": 110,
            },
            "inserted": {
              "x": 30,
              "y": 30,
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress dragging > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress dragging > [end of test] number of renders 1`] = `25`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress freedraw > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "freedraw",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress freedraw > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 50,
  "id": "id115",
  "index": "a0",
  "isDeleted": false,
  "lastCommittedPoint": [
    50,
    50,
  ],
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      20,
      20,
    ],
    [
      50,
      50,
    ],
    [
      50,
      50,
    ],
  ],
  "pressures": [
    0,
    0,
    0,
    0,
  ],
  "roughness": 1,
  "roundness": null,
  "simulatePressure": false,
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "freedraw",
  "updated": 1,
  "version": 7,
  "width": 50,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress freedraw > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id116",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#a5d8ff",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress freedraw > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id115" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 50,
              "index": "a0",
              "isDeleted": false,
              "lastCommittedPoint": [
                50,
                50,
              ],
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  20,
                  20,
                ],
                [
                  50,
                  50,
                ],
                [
                  50,
                  50,
                ],
              ],
              "pressures": [
                0,
                0,
                0,
                0,
              ],
              "roughness": 1,
              "roundness": null,
              "simulatePressure": false,
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "freedraw",
              "width": 50,
              "x": 10,
              "y": 10,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress freedraw > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress freedraw > [end of test] number of renders 1`] = `8`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress resizing > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id117": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress resizing > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 90,
  "id": "id117",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 9,
  "width": 90,
  "x": 10,
  "y": 10,
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress resizing > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id119",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#a5d8ff",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress resizing > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id117": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id117" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 10,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id117" => Delta {
            "deleted": {
              "height": 90,
              "width": 90,
            },
            "inserted": {
              "height": 10,
              "width": 10,
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress resizing > [end of test] number of elements 1`] = `2`;

exports[`history > multiplayer undo/redo > should not let remote changes to interfere with in progress resizing > [end of test] number of renders 1`] = `13`;

exports[`history > multiplayer undo/redo > should not override remote changes on different elements > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id77": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should not override remote changes on different elements > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id77",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should not override remote changes on different elements > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id77": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id77" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should not override remote changes on different elements > [end of test] number of elements 1`] = `1`;

exports[`history > multiplayer undo/redo > should not override remote changes on different elements > [end of test] number of renders 1`] = `5`;

exports[`history > multiplayer undo/redo > should not override remote changes on different properties > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id78": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should not override remote changes on different properties > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id78",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should not override remote changes on different properties > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id78": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id78" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should not override remote changes on different properties > [end of test] number of elements 1`] = `1`;

exports[`history > multiplayer undo/redo > should not override remote changes on different properties > [end of test] number of renders 1`] = `5`;

exports[`history > multiplayer undo/redo > should override remotely added groups on undo, but restore them on redo > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should override remotely added groups on undo, but restore them on redo > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
    "B",
  ],
  "height": 100,
  "id": "id83",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 6,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should override remotely added groups on undo, but restore them on redo > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
    "B",
  ],
  "height": 100,
  "id": "id84",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 6,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should override remotely added groups on undo, but restore them on redo > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "B",
  ],
  "height": 100,
  "id": "id85",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should override remotely added groups on undo, but restore them on redo > [end of test] element 3 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "B",
  ],
  "height": 100,
  "id": "id86",
  "index": "a3",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should override remotely added groups on undo, but restore them on redo > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id83" => Delta {
            "deleted": {
              "groupIds": [
                "A",
                "B",
              ],
            },
            "inserted": {
              "groupIds": [],
            },
          },
          "id84" => Delta {
            "deleted": {
              "groupIds": [
                "A",
                "B",
              ],
            },
            "inserted": {
              "groupIds": [],
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should override remotely added groups on undo, but restore them on redo > [end of test] number of elements 1`] = `4`;

exports[`history > multiplayer undo/redo > should override remotely added groups on undo, but restore them on redo > [end of test] number of renders 1`] = `8`;

exports[`history > multiplayer undo/redo > should override remotely added points on undo, but restore them on redo > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id87": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should override remotely added points on undo, but restore them on redo > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "elbowed": false,
  "endArrowhead": "arrow",
  "endBinding": null,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 30,
  "id": "id87",
  "index": "a0",
  "isDeleted": false,
  "lastCommittedPoint": [
    30,
    30,
  ],
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      5,
      5,
    ],
    [
      10,
      10,
    ],
    [
      15,
      15,
    ],
    [
      20,
      20,
    ],
  ],
  "roughness": 1,
  "roundness": {
    "type": 2,
  },
  "startArrowhead": null,
  "startBinding": null,
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "arrow",
  "updated": 1,
  "version": 13,
  "width": 30,
  "x": 0,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should override remotely added points on undo, but restore them on redo > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id87": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id87" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "elbowed": false,
              "endArrowhead": "arrow",
              "endBinding": null,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "lastCommittedPoint": [
                10,
                10,
              ],
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  10,
                  10,
                ],
              ],
              "roughness": 1,
              "roundness": {
                "type": 2,
              },
              "startArrowhead": null,
              "startBinding": null,
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "arrow",
              "width": 10,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id87" => Delta {
            "deleted": {
              "height": 30,
              "lastCommittedPoint": [
                30,
                30,
              ],
              "points": [
                [
                  0,
                  0,
                ],
                [
                  5,
                  5,
                ],
                [
                  10,
                  10,
                ],
                [
                  15,
                  15,
                ],
                [
                  20,
                  20,
                ],
              ],
              "width": 30,
            },
            "inserted": {
              "height": 10,
              "lastCommittedPoint": [
                10,
                10,
              ],
              "points": [
                [
                  0,
                  0,
                ],
                [
                  10,
                  10,
                ],
              ],
              "width": 10,
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedLinearElementId": "id87",
          },
          "inserted": {
            "selectedLinearElementId": null,
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should override remotely added points on undo, but restore them on redo > [end of test] number of elements 1`] = `1`;

exports[`history > multiplayer undo/redo > should override remotely added points on undo, but restore them on redo > [end of test] number of renders 1`] = `15`;

exports[`history > multiplayer undo/redo > should redistribute deltas when element gets removed locally but is restored remotely > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should redistribute deltas when element gets removed locally but is restored remotely > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "#ffec99",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id88",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 7,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should redistribute deltas when element gets removed locally but is restored remotely > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id88": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id88" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "#ffec99",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {},
          },
          "inserted": {
            "selectedElementIds": {
              "id88": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id88" => Delta {
            "deleted": {
              "isDeleted": false,
            },
            "inserted": {
              "isDeleted": false,
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should redistribute deltas when element gets removed locally but is restored remotely > [end of test] number of elements 1`] = `1`;

exports[`history > multiplayer undo/redo > should redistribute deltas when element gets removed locally but is restored remotely > [end of test] number of renders 1`] = `11`;

exports[`history > multiplayer undo/redo > should redraw arrows on undo > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should redraw arrows on undo > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 126,
  "id": "KPrBI4g_v9qUB1XxYLgSz",
  "index": "a0",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 157,
  "x": 600,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should redraw arrows on undo > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 129,
  "id": "u2JGnnmoJ0VATV4vCNJE5",
  "index": "a1",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "diamond",
  "updated": 1,
  "version": 4,
  "width": 124,
  "x": 1152,
  "y": 516,
}
`;

exports[`history > multiplayer undo/redo > should redraw arrows on undo > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "elbowed": true,
  "endArrowhead": null,
  "endBinding": {
    "elementId": "u2JGnnmoJ0VATV4vCNJE5",
    "fixedPoint": [
      "0.49919",
      "-0.03875",
    ],
    "focus": "-0.00161",
    "gap": "3.53708",
  },
  "endIsSpecial": false,
  "fillStyle": "solid",
  "fixedSegments": [],
  "frameId": null,
  "groupIds": [],
  "height": "236.10000",
  "id": "6Rm4g567UQM4WjLwej2Vc",
  "index": "a2",
  "isDeleted": true,
  "lastCommittedPoint": null,
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      "178.90000",
      0,
    ],
    [
      "178.90000",
      "236.10000",
    ],
  ],
  "roughness": 1,
  "roundness": {
    "type": 2,
  },
  "startArrowhead": null,
  "startBinding": {
    "elementId": "KPrBI4g_v9qUB1XxYLgSz",
    "fixedPoint": [
      "1.03185",
      "0.49921",
    ],
    "focus": "-0.00159",
    "gap": 5,
  },
  "startIsSpecial": false,
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "arrow",
  "updated": 1,
  "version": 3,
  "width": "178.90000",
  "x": 1035,
  "y": "274.90000",
}
`;

exports[`history > multiplayer undo/redo > should redraw arrows on undo > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "6Rm4g567UQM4WjLwej2Vc" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "elbowed": true,
              "endArrowhead": null,
              "endBinding": {
                "elementId": "u2JGnnmoJ0VATV4vCNJE5",
                "fixedPoint": [
                  "0.49919",
                  "-0.03875",
                ],
                "focus": "-0.00161",
                "gap": "3.53708",
              },
              "endIsSpecial": false,
              "fillStyle": "solid",
              "fixedSegments": [],
              "frameId": null,
              "groupIds": [],
              "height": "236.10000",
              "index": "a2",
              "isDeleted": false,
              "lastCommittedPoint": null,
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  "178.90000",
                  0,
                ],
                [
                  "178.90000",
                  "236.10000",
                ],
              ],
              "roughness": 1,
              "roundness": {
                "type": 2,
              },
              "startArrowhead": null,
              "startBinding": {
                "elementId": "KPrBI4g_v9qUB1XxYLgSz",
                "fixedPoint": [
                  "1.03185",
                  "0.49921",
                ],
                "focus": "-0.00159",
                "gap": 5,
              },
              "startIsSpecial": false,
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "arrow",
              "width": "178.90000",
              "x": 1035,
              "y": "274.90000",
            },
          },
        },
        "removed": Map {},
        "updated": Map {
          "KPrBI4g_v9qUB1XxYLgSz" => Delta {
            "deleted": {
              "boundElements": [],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "6Rm4g567UQM4WjLwej2Vc",
                  "type": "arrow",
                },
              ],
            },
          },
          "u2JGnnmoJ0VATV4vCNJE5" => Delta {
            "deleted": {
              "boundElements": [],
            },
            "inserted": {
              "boundElements": [
                {
                  "id": "6Rm4g567UQM4WjLwej2Vc",
                  "type": "arrow",
                },
              ],
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "KPrBI4g_v9qUB1XxYLgSz" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 126,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 157,
              "x": 600,
              "y": 0,
            },
          },
          "u2JGnnmoJ0VATV4vCNJE5" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 129,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "diamond",
              "width": 124,
              "x": 1152,
              "y": 516,
            },
          },
        },
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > multiplayer undo/redo > should redraw arrows on undo > [end of test] number of elements 1`] = `3`;

exports[`history > multiplayer undo/redo > should redraw arrows on undo > [end of test] number of renders 1`] = `8`;

exports[`history > multiplayer undo/redo > should update history entries after remote changes on the same properties > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id79": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > multiplayer undo/redo > should update history entries after remote changes on the same properties > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id79",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > multiplayer undo/redo > should update history entries after remote changes on the same properties > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id79": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id79" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > multiplayer undo/redo > should update history entries after remote changes on the same properties > [end of test] number of elements 1`] = `1`;

exports[`history > multiplayer undo/redo > should update history entries after remote changes on the same properties > [end of test] number of renders 1`] = `5`;

exports[`history > singleplayer undo/redo > remounting undo/redo buttons should initialize undo/redo state correctly > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": false,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > remounting undo/redo buttons should initialize undo/redo state correctly > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "A",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > remounting undo/redo buttons should initialize undo/redo state correctly > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id76",
  "index": "a1",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 10,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > remounting undo/redo buttons should initialize undo/redo state correctly > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {},
          },
          "inserted": {
            "selectedElementIds": {
              "id76": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "id76" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 0,
              "y": 0,
            },
          },
        },
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > singleplayer undo/redo > remounting undo/redo buttons should initialize undo/redo state correctly > [end of test] number of elements 1`] = `2`;

exports[`history > singleplayer undo/redo > remounting undo/redo buttons should initialize undo/redo state correctly > [end of test] number of renders 1`] = `11`;

exports[`history > singleplayer undo/redo > should clear the redo stack on elements change > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id13": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should clear the redo stack on elements change > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id12",
  "index": "a0",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should clear the redo stack on elements change > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id13",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 20,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should clear the redo stack on elements change > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id13": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id13" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 20,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should clear the redo stack on elements change > [end of test] number of elements 1`] = `2`;

exports[`history > singleplayer undo/redo > should clear the redo stack on elements change > [end of test] number of renders 1`] = `8`;

exports[`history > singleplayer undo/redo > should create entry when selecting freedraw > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "freedraw",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should create entry when selecting freedraw > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id31",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 10,
  "y": 10,
}
`;

exports[`history > singleplayer undo/redo > should create entry when selecting freedraw > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id32",
  "index": "a1",
  "isDeleted": true,
  "lastCommittedPoint": [
    50,
    10,
  ],
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      50,
      10,
    ],
    [
      50,
      10,
    ],
  ],
  "pressures": [
    0,
    0,
    0,
  ],
  "roughness": 1,
  "roundness": null,
  "simulatePressure": false,
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "freedraw",
  "updated": 1,
  "version": 5,
  "width": 50,
  "x": 60,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should create entry when selecting freedraw > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "id32" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "lastCommittedPoint": [
                50,
                10,
              ],
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  50,
                  10,
                ],
                [
                  50,
                  10,
                ],
              ],
              "pressures": [
                0,
                0,
                0,
              ],
              "roughness": 1,
              "roundness": null,
              "simulatePressure": false,
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "freedraw",
              "width": 50,
              "x": 60,
              "y": 0,
            },
          },
        },
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id31": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id31" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 10,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {},
          },
          "inserted": {
            "selectedElementIds": {
              "id31": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should create entry when selecting freedraw > [end of test] number of elements 1`] = `2`;

exports[`history > singleplayer undo/redo > should create entry when selecting freedraw > [end of test] number of renders 1`] = `9`;

exports[`history > singleplayer undo/redo > should create new history entry on scene import via drag&drop > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": -50,
  "scrollY": -50,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": false,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#000",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should create new history entry on scene import via drag&drop > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "A",
  "index": "a0",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 5,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should create new history entry on scene import via drag&drop > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "B",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 5,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should create new history entry on scene import via drag&drop > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "viewBackgroundColor": "#000",
          },
          "inserted": {
            "viewBackgroundColor": "#FFF",
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "A" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "isDeleted": false,
            },
          },
        },
        "removed": Map {
          "B" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": [],
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should create new history entry on scene import via drag&drop > [end of test] number of elements 1`] = `2`;

exports[`history > singleplayer undo/redo > should create new history entry on scene import via drag&drop > [end of test] number of renders 1`] = `6`;

exports[`history > singleplayer undo/redo > should disable undo/redo buttons when stacks empty > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id74": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": false,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should disable undo/redo buttons when stacks empty > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "A",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should disable undo/redo buttons when stacks empty > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id74",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 5,
  "width": 10,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should disable undo/redo buttons when stacks empty > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id74": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id74" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should disable undo/redo buttons when stacks empty > [end of test] number of elements 1`] = `2`;

exports[`history > singleplayer undo/redo > should disable undo/redo buttons when stacks empty > [end of test] number of renders 1`] = `7`;

exports[`history > singleplayer undo/redo > should end up with no history entry after initializing scene > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id18": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": false,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": true,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should end up with no history entry after initializing scene > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": [],
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "A",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should end up with no history entry after initializing scene > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id18",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 5,
  "width": 10,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should end up with no history entry after initializing scene > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id18": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id18" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should end up with no history entry after initializing scene > [end of test] number of elements 1`] = `2`;

exports[`history > singleplayer undo/redo > should end up with no history entry after initializing scene > [end of test] number of renders 1`] = `7`;

exports[`history > singleplayer undo/redo > should iterate through the history when selection changes do not produce visible change > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id14": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should iterate through the history when selection changes do not produce visible change > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id14",
  "index": "a0",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 4,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should iterate through the history when selection changes do not produce visible change > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id14": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id14": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {},
          },
          "inserted": {
            "selectedElementIds": {
              "id14": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "id14" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
          },
        },
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
  "undoStack": [],
}
`;

exports[`history > singleplayer undo/redo > should iterate through the history when selection changes do not produce visible change > [end of test] number of elements 1`] = `1`;

exports[`history > singleplayer undo/redo > should iterate through the history when selection changes do not produce visible change > [end of test] number of renders 1`] = `13`;

exports[`history > singleplayer undo/redo > should not clear the redo stack on standalone appstate change > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id8": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should not clear the redo stack on standalone appstate change > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id7",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should not clear the redo stack on standalone appstate change > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id8",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 5,
  "width": 10,
  "x": 20,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should not clear the redo stack on standalone appstate change > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id7": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id7" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {},
          },
          "inserted": {
            "selectedElementIds": {
              "id7": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id7": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id8": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id7": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id8" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 20,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should not clear the redo stack on standalone appstate change > [end of test] number of elements 1`] = `2`;

exports[`history > singleplayer undo/redo > should not clear the redo stack on standalone appstate change > [end of test] number of renders 1`] = `12`;

exports[`history > singleplayer undo/redo > should not collapse when applying corrupted history entry > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should not collapse when applying corrupted history entry > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id0",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should not collapse when applying corrupted history entry > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should not collapse when applying corrupted history entry > [end of test] number of elements 1`] = `1`;

exports[`history > singleplayer undo/redo > should not collapse when applying corrupted history entry > [end of test] number of renders 1`] = `4`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no appstate changes > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id1": true,
    "id2": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {
    "A": true,
  },
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no appstate changes > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
  ],
  "height": 100,
  "id": "id1",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no appstate changes > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
  ],
  "height": 100,
  "id": "id2",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no appstate changes > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id1": true,
              "id2": true,
            },
            "selectedGroupIds": {
              "A": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
            "selectedGroupIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id1" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [
                "A",
              ],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id2" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [
                "A",
              ],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no appstate changes > [end of test] number of elements 1`] = `2`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no appstate changes > [end of test] number of renders 1`] = `7`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no elements changes > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no elements changes > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id5",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no elements changes > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id6",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no elements changes > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id5" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id6" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no elements changes > [end of test] number of elements 1`] = `2`;

exports[`history > singleplayer undo/redo > should not end up with history entry when there are no elements changes > [end of test] number of renders 1`] = `5`;

exports[`history > singleplayer undo/redo > should not override appstate changes when redo stack is not cleared > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id11": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should not override appstate changes when redo stack is not cleared > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id11",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should not override appstate changes when redo stack is not cleared > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id11": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id11" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should not override appstate changes when redo stack is not cleared > [end of test] number of elements 1`] = `1`;

exports[`history > singleplayer undo/redo > should not override appstate changes when redo stack is not cleared > [end of test] number of renders 1`] = `5`;

exports[`history > singleplayer undo/redo > should support appstate name or viewBackgroundColor change > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": {
    "x": 0,
    "y": 0,
  },
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {},
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#000",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support appstate name or viewBackgroundColor change > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "name": "New name",
          },
          "inserted": {
            "name": "Old name",
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "viewBackgroundColor": "#000",
          },
          "inserted": {
            "viewBackgroundColor": "#FFF",
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support appstate name or viewBackgroundColor change > [end of test] number of elements 1`] = `0`;

exports[`history > singleplayer undo/redo > should support appstate name or viewBackgroundColor change > [end of test] number of renders 1`] = `8`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on deletion and rebind on undo > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": {
    "items": [
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M7 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M9.15 14.85l8.85 -10.85"
            />
            <path
              d="M6 4l8.85 10.85"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.cut",
        "name": "cut",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": undefined,
        "label": "labels.copy",
        "name": "copy",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keyTest": undefined,
        "label": "labels.paste",
        "name": "paste",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.selectAllElementsInFrame",
        "name": "selectAllElementsInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "canvas",
        },
      },
      {
        "label": "labels.removeAllElementsFromFrame",
        "name": "removeAllElementsFromFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "history",
        },
      },
      {
        "label": "labels.wrapSelectionInFrame",
        "name": "wrapSelectionInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 5v10a1 1 0 0 0 1 1h10"
            />
            <path
              d="M5 8h10a1 1 0 0 1 1 1v10"
            />
          </g>
        </svg>,
        "keywords": [
          "image",
          "crop",
        ],
        "label": "helpDialog.cropStart",
        "name": "cropEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "menu",
        },
        "viewMode": true,
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
            <path
              d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6"
            />
            <path
              d="M11 21v-6l3 6v-6"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "png",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsPng",
        "name": "copyAsPng",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M4 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75"
            />
            <path
              d="M10 15l2 6l2 -6"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
          </g>
        </svg>,
        "keywords": [
          "svg",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsSvg",
        "name": "copyAsSvg",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keywords": [
          "text",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyText",
        "name": "copyText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.copyStyles",
        "name": "copyStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.pasteStyles",
        "name": "pasteStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.group",
        "name": "group",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": null,
        "label": "labels.autoResize",
        "name": "autoResize",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.unbindText",
        "name": "unbindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.bindText",
        "name": "bindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.createContainerFromText",
        "name": "wrapTextInContainer",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.ungroup",
        "name": "ungroup",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.addToLibrary",
        "name": "addToLibrary",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendBackward",
        "name": "sendBackward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringForward",
        "name": "bringForward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendToBack",
        "name": "sendToBack",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringToFront",
        "name": "bringToFront",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 3l0 18"
            />
            <path
              d="M16 7l0 10l5 0l-5 -10"
            />
            <path
              d="M8 7l0 10l-5 0l5 -10"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipHorizontal",
        "name": "flipHorizontal",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M3 12l18 0"
            />
            <path
              d="M7 16l10 0l-10 5l0 -5"
            />
            <path
              d="M7 8l10 0l-10 -5l0 5"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipVertical",
        "name": "flipVertical",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "category": "Elements",
        "keywords": [
          "line",
        ],
        "label": [Function],
        "name": "toggleLinearEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M8.333 11.667a2.917 2.917 0 0 0 4.167 0l3.333-3.334a2.946 2.946 0 1 0-4.166-4.166l-.417.416"
            />
            <path
              d="M11.667 8.333a2.917 2.917 0 0 0-4.167 0l-3.333 3.334a2.946 2.946 0 0 0 4.166 4.166l.417-.416"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": [Function],
        "name": "hyperlink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "action": "click",
          "category": "hyperlink",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <React.Fragment>
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2"
            />
          </React.Fragment>
        </svg>,
        "label": "labels.copyElementLink",
        "name": "copyElementLink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.duplicateSelection",
        "name": "duplicateSelection",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": [Function],
        "keyTest": [Function],
        "label": [Function],
        "name": "toggleElementLock",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <path
            d="M3.333 5.833h13.334M8.333 9.167v5M11.667 9.167v5M4.167 5.833l.833 10c0 .92.746 1.667 1.667 1.667h6.666c.92 0 1.667-.746 1.667-1.667l.833-10M7.5 5.833v-2.5c0-.46.373-.833.833-.833h3.334c.46 0 .833.373.833.833v2.5"
            strokeWidth="1.25"
          />
        </svg>,
        "keyTest": [Function],
        "label": "labels.delete",
        "name": "deleteSelectedElements",
        "perform": [Function],
        "trackEvent": {
          "action": "delete",
          "category": "element",
        },
      },
    ],
    "left": 0,
    "top": 0,
  },
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id53": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id53": true,
    "id54": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on deletion and rebind on undo > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id53",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on deletion and rebind on undo > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": null,
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id54",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "ola",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "ola",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 2,
  "verticalAlign": "top",
  "width": 100,
  "x": -200,
  "y": -200,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on deletion and rebind on undo > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id55",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on deletion and rebind on undo > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id53" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id54" => Delta {
            "deleted": {
              "angle": 0,
              "autoResize": true,
              "backgroundColor": "transparent",
              "boundElements": null,
              "containerId": null,
              "customData": undefined,
              "fillStyle": "solid",
              "fontFamily": 5,
              "fontSize": 20,
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "lineHeight": "1.25000",
              "link": null,
              "locked": false,
              "opacity": 100,
              "originalText": "ola",
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "text": "ola",
              "textAlign": "left",
              "type": "text",
              "verticalAlign": "top",
              "width": 100,
              "x": -200,
              "y": -200,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id55" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a2",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id53": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id54": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on deletion and rebind on undo > [end of test] number of elements 1`] = `3`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on deletion and rebind on undo > [end of test] number of renders 1`] = `6`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on undo and rebind on redo > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": {
    "items": [
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M7 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M9.15 14.85l8.85 -10.85"
            />
            <path
              d="M6 4l8.85 10.85"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.cut",
        "name": "cut",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": undefined,
        "label": "labels.copy",
        "name": "copy",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keyTest": undefined,
        "label": "labels.paste",
        "name": "paste",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.selectAllElementsInFrame",
        "name": "selectAllElementsInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "canvas",
        },
      },
      {
        "label": "labels.removeAllElementsFromFrame",
        "name": "removeAllElementsFromFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "history",
        },
      },
      {
        "label": "labels.wrapSelectionInFrame",
        "name": "wrapSelectionInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 5v10a1 1 0 0 0 1 1h10"
            />
            <path
              d="M5 8h10a1 1 0 0 1 1 1v10"
            />
          </g>
        </svg>,
        "keywords": [
          "image",
          "crop",
        ],
        "label": "helpDialog.cropStart",
        "name": "cropEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "menu",
        },
        "viewMode": true,
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
            <path
              d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6"
            />
            <path
              d="M11 21v-6l3 6v-6"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "png",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsPng",
        "name": "copyAsPng",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M4 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75"
            />
            <path
              d="M10 15l2 6l2 -6"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
          </g>
        </svg>,
        "keywords": [
          "svg",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsSvg",
        "name": "copyAsSvg",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keywords": [
          "text",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyText",
        "name": "copyText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.copyStyles",
        "name": "copyStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.pasteStyles",
        "name": "pasteStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.group",
        "name": "group",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": null,
        "label": "labels.autoResize",
        "name": "autoResize",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.unbindText",
        "name": "unbindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.bindText",
        "name": "bindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.createContainerFromText",
        "name": "wrapTextInContainer",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.ungroup",
        "name": "ungroup",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.addToLibrary",
        "name": "addToLibrary",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendBackward",
        "name": "sendBackward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringForward",
        "name": "bringForward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendToBack",
        "name": "sendToBack",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringToFront",
        "name": "bringToFront",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 3l0 18"
            />
            <path
              d="M16 7l0 10l5 0l-5 -10"
            />
            <path
              d="M8 7l0 10l-5 0l5 -10"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipHorizontal",
        "name": "flipHorizontal",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M3 12l18 0"
            />
            <path
              d="M7 16l10 0l-10 5l0 -5"
            />
            <path
              d="M7 8l10 0l-10 -5l0 5"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipVertical",
        "name": "flipVertical",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "category": "Elements",
        "keywords": [
          "line",
        ],
        "label": [Function],
        "name": "toggleLinearEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M8.333 11.667a2.917 2.917 0 0 0 4.167 0l3.333-3.334a2.946 2.946 0 1 0-4.166-4.166l-.417.416"
            />
            <path
              d="M11.667 8.333a2.917 2.917 0 0 0-4.167 0l-3.333 3.334a2.946 2.946 0 0 0 4.166 4.166l.417-.416"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": [Function],
        "name": "hyperlink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "action": "click",
          "category": "hyperlink",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <React.Fragment>
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2"
            />
          </React.Fragment>
        </svg>,
        "label": "labels.copyElementLink",
        "name": "copyElementLink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.duplicateSelection",
        "name": "duplicateSelection",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": [Function],
        "keyTest": [Function],
        "label": [Function],
        "name": "toggleElementLock",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <path
            d="M3.333 5.833h13.334M8.333 9.167v5M11.667 9.167v5M4.167 5.833l.833 10c0 .92.746 1.667 1.667 1.667h6.666c.92 0 1.667-.746 1.667-1.667l.833-10M7.5 5.833v-2.5c0-.46.373-.833.833-.833h3.334c.46 0 .833.373.833.833v2.5"
            strokeWidth="1.25"
          />
        </svg>,
        "keyTest": [Function],
        "label": "labels.delete",
        "name": "deleteSelectedElements",
        "perform": [Function],
        "trackEvent": {
          "action": "delete",
          "category": "element",
        },
      },
    ],
    "left": 0,
    "top": 0,
  },
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id48": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id48": true,
    "id49": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on undo and rebind on redo > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id48",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on undo and rebind on redo > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": null,
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id49",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "ola",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "ola",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 2,
  "verticalAlign": "top",
  "width": 100,
  "x": -200,
  "y": -200,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on undo and rebind on redo > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id50",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on undo and rebind on redo > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id48" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id49" => Delta {
            "deleted": {
              "angle": 0,
              "autoResize": true,
              "backgroundColor": "transparent",
              "boundElements": null,
              "containerId": null,
              "customData": undefined,
              "fillStyle": "solid",
              "fontFamily": 5,
              "fontSize": 20,
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "lineHeight": "1.25000",
              "link": null,
              "locked": false,
              "opacity": 100,
              "originalText": "ola",
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "text": "ola",
              "textAlign": "left",
              "type": "text",
              "verticalAlign": "top",
              "width": 100,
              "x": -200,
              "y": -200,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id50" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a2",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id48": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id49": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on undo and rebind on redo > [end of test] number of elements 1`] = `3`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind arrow from non deleted bindable elements on undo and rebind on redo > [end of test] number of renders 1`] = `6`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind everything from non deleted elements when iterating through the whole undo stack and vice versa rebind everything on redo > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": {
    "items": [
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M7 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M9.15 14.85l8.85 -10.85"
            />
            <path
              d="M6 4l8.85 10.85"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.cut",
        "name": "cut",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": undefined,
        "label": "labels.copy",
        "name": "copy",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keyTest": undefined,
        "label": "labels.paste",
        "name": "paste",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.selectAllElementsInFrame",
        "name": "selectAllElementsInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "canvas",
        },
      },
      {
        "label": "labels.removeAllElementsFromFrame",
        "name": "removeAllElementsFromFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "history",
        },
      },
      {
        "label": "labels.wrapSelectionInFrame",
        "name": "wrapSelectionInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 5v10a1 1 0 0 0 1 1h10"
            />
            <path
              d="M5 8h10a1 1 0 0 1 1 1v10"
            />
          </g>
        </svg>,
        "keywords": [
          "image",
          "crop",
        ],
        "label": "helpDialog.cropStart",
        "name": "cropEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "menu",
        },
        "viewMode": true,
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
            <path
              d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6"
            />
            <path
              d="M11 21v-6l3 6v-6"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "png",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsPng",
        "name": "copyAsPng",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M4 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75"
            />
            <path
              d="M10 15l2 6l2 -6"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
          </g>
        </svg>,
        "keywords": [
          "svg",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsSvg",
        "name": "copyAsSvg",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keywords": [
          "text",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyText",
        "name": "copyText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.copyStyles",
        "name": "copyStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.pasteStyles",
        "name": "pasteStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.group",
        "name": "group",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": null,
        "label": "labels.autoResize",
        "name": "autoResize",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.unbindText",
        "name": "unbindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.bindText",
        "name": "bindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.createContainerFromText",
        "name": "wrapTextInContainer",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.ungroup",
        "name": "ungroup",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.addToLibrary",
        "name": "addToLibrary",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendBackward",
        "name": "sendBackward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringForward",
        "name": "bringForward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendToBack",
        "name": "sendToBack",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringToFront",
        "name": "bringToFront",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 3l0 18"
            />
            <path
              d="M16 7l0 10l5 0l-5 -10"
            />
            <path
              d="M8 7l0 10l-5 0l5 -10"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipHorizontal",
        "name": "flipHorizontal",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M3 12l18 0"
            />
            <path
              d="M7 16l10 0l-10 5l0 -5"
            />
            <path
              d="M7 8l10 0l-10 -5l0 5"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipVertical",
        "name": "flipVertical",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "category": "Elements",
        "keywords": [
          "line",
        ],
        "label": [Function],
        "name": "toggleLinearEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M8.333 11.667a2.917 2.917 0 0 0 4.167 0l3.333-3.334a2.946 2.946 0 1 0-4.166-4.166l-.417.416"
            />
            <path
              d="M11.667 8.333a2.917 2.917 0 0 0-4.167 0l-3.333 3.334a2.946 2.946 0 0 0 4.166 4.166l.417-.416"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": [Function],
        "name": "hyperlink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "action": "click",
          "category": "hyperlink",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <React.Fragment>
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2"
            />
          </React.Fragment>
        </svg>,
        "label": "labels.copyElementLink",
        "name": "copyElementLink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.duplicateSelection",
        "name": "duplicateSelection",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": [Function],
        "keyTest": [Function],
        "label": [Function],
        "name": "toggleElementLock",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <path
            d="M3.333 5.833h13.334M8.333 9.167v5M11.667 9.167v5M4.167 5.833l.833 10c0 .92.746 1.667 1.667 1.667h6.666c.92 0 1.667-.746 1.667-1.667l.833-10M7.5 5.833v-2.5c0-.46.373-.833.833-.833h3.334c.46 0 .833.373.833.833v2.5"
            strokeWidth="1.25"
          />
        </svg>,
        "keyTest": [Function],
        "label": "labels.delete",
        "name": "deleteSelectedElements",
        "perform": [Function],
        "trackEvent": {
          "action": "delete",
          "category": "element",
        },
      },
    ],
    "left": 0,
    "top": 0,
  },
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id58": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id58": true,
    "id59": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind everything from non deleted elements when iterating through the whole undo stack and vice versa rebind everything on redo > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id58",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind everything from non deleted elements when iterating through the whole undo stack and vice versa rebind everything on redo > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": null,
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id59",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "ola",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "ola",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 2,
  "verticalAlign": "top",
  "width": 100,
  "x": -200,
  "y": -200,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind everything from non deleted elements when iterating through the whole undo stack and vice versa rebind everything on redo > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id60",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind everything from non deleted elements when iterating through the whole undo stack and vice versa rebind everything on redo > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id58" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id59" => Delta {
            "deleted": {
              "angle": 0,
              "autoResize": true,
              "backgroundColor": "transparent",
              "boundElements": null,
              "containerId": null,
              "customData": undefined,
              "fillStyle": "solid",
              "fontFamily": 5,
              "fontSize": 20,
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "lineHeight": "1.25000",
              "link": null,
              "locked": false,
              "opacity": 100,
              "originalText": "ola",
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "text": "ola",
              "textAlign": "left",
              "type": "text",
              "verticalAlign": "top",
              "width": 100,
              "x": -200,
              "y": -200,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id60" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a2",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id58": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id59": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind everything from non deleted elements when iterating through the whole undo stack and vice versa rebind everything on redo > [end of test] number of elements 1`] = `3`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind everything from non deleted elements when iterating through the whole undo stack and vice versa rebind everything on redo > [end of test] number of renders 1`] = `6`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangle from arrow on deletion and rebind on undo > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": {
    "items": [
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M7 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M9.15 14.85l8.85 -10.85"
            />
            <path
              d="M6 4l8.85 10.85"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.cut",
        "name": "cut",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": undefined,
        "label": "labels.copy",
        "name": "copy",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keyTest": undefined,
        "label": "labels.paste",
        "name": "paste",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.selectAllElementsInFrame",
        "name": "selectAllElementsInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "canvas",
        },
      },
      {
        "label": "labels.removeAllElementsFromFrame",
        "name": "removeAllElementsFromFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "history",
        },
      },
      {
        "label": "labels.wrapSelectionInFrame",
        "name": "wrapSelectionInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 5v10a1 1 0 0 0 1 1h10"
            />
            <path
              d="M5 8h10a1 1 0 0 1 1 1v10"
            />
          </g>
        </svg>,
        "keywords": [
          "image",
          "crop",
        ],
        "label": "helpDialog.cropStart",
        "name": "cropEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "menu",
        },
        "viewMode": true,
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
            <path
              d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6"
            />
            <path
              d="M11 21v-6l3 6v-6"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "png",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsPng",
        "name": "copyAsPng",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M4 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75"
            />
            <path
              d="M10 15l2 6l2 -6"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
          </g>
        </svg>,
        "keywords": [
          "svg",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsSvg",
        "name": "copyAsSvg",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keywords": [
          "text",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyText",
        "name": "copyText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.copyStyles",
        "name": "copyStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.pasteStyles",
        "name": "pasteStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.group",
        "name": "group",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": null,
        "label": "labels.autoResize",
        "name": "autoResize",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.unbindText",
        "name": "unbindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.bindText",
        "name": "bindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.createContainerFromText",
        "name": "wrapTextInContainer",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.ungroup",
        "name": "ungroup",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.addToLibrary",
        "name": "addToLibrary",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendBackward",
        "name": "sendBackward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringForward",
        "name": "bringForward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendToBack",
        "name": "sendToBack",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringToFront",
        "name": "bringToFront",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 3l0 18"
            />
            <path
              d="M16 7l0 10l5 0l-5 -10"
            />
            <path
              d="M8 7l0 10l-5 0l5 -10"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipHorizontal",
        "name": "flipHorizontal",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M3 12l18 0"
            />
            <path
              d="M7 16l10 0l-10 5l0 -5"
            />
            <path
              d="M7 8l10 0l-10 -5l0 5"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipVertical",
        "name": "flipVertical",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "category": "Elements",
        "keywords": [
          "line",
        ],
        "label": [Function],
        "name": "toggleLinearEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M8.333 11.667a2.917 2.917 0 0 0 4.167 0l3.333-3.334a2.946 2.946 0 1 0-4.166-4.166l-.417.416"
            />
            <path
              d="M11.667 8.333a2.917 2.917 0 0 0-4.167 0l-3.333 3.334a2.946 2.946 0 0 0 4.166 4.166l.417-.416"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": [Function],
        "name": "hyperlink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "action": "click",
          "category": "hyperlink",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <React.Fragment>
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2"
            />
          </React.Fragment>
        </svg>,
        "label": "labels.copyElementLink",
        "name": "copyElementLink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.duplicateSelection",
        "name": "duplicateSelection",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": [Function],
        "keyTest": [Function],
        "label": [Function],
        "name": "toggleElementLock",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <path
            d="M3.333 5.833h13.334M8.333 9.167v5M11.667 9.167v5M4.167 5.833l.833 10c0 .92.746 1.667 1.667 1.667h6.666c.92 0 1.667-.746 1.667-1.667l.833-10M7.5 5.833v-2.5c0-.46.373-.833.833-.833h3.334c.46 0 .833.373.833.833v2.5"
            strokeWidth="1.25"
          />
        </svg>,
        "keyTest": [Function],
        "label": "labels.delete",
        "name": "deleteSelectedElements",
        "perform": [Function],
        "trackEvent": {
          "action": "delete",
          "category": "element",
        },
      },
    ],
    "left": 0,
    "top": 0,
  },
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id63": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id63": true,
    "id64": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangle from arrow on deletion and rebind on undo > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id63",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangle from arrow on deletion and rebind on undo > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": null,
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id64",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "ola",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "ola",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 2,
  "verticalAlign": "top",
  "width": 100,
  "x": -200,
  "y": -200,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangle from arrow on deletion and rebind on undo > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id65",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangle from arrow on deletion and rebind on undo > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id63" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id64" => Delta {
            "deleted": {
              "angle": 0,
              "autoResize": true,
              "backgroundColor": "transparent",
              "boundElements": null,
              "containerId": null,
              "customData": undefined,
              "fillStyle": "solid",
              "fontFamily": 5,
              "fontSize": 20,
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "lineHeight": "1.25000",
              "link": null,
              "locked": false,
              "opacity": 100,
              "originalText": "ola",
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "text": "ola",
              "textAlign": "left",
              "type": "text",
              "verticalAlign": "top",
              "width": 100,
              "x": -200,
              "y": -200,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id65" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a2",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id63": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id64": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangle from arrow on deletion and rebind on undo > [end of test] number of elements 1`] = `3`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangle from arrow on deletion and rebind on undo > [end of test] number of renders 1`] = `6`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangles from arrow on deletion and rebind on undo > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": {
    "items": [
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M7 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
            />
            <path
              d="M9.15 14.85l8.85 -10.85"
            />
            <path
              d="M6 4l8.85 10.85"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.cut",
        "name": "cut",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": undefined,
        "label": "labels.copy",
        "name": "copy",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keyTest": undefined,
        "label": "labels.paste",
        "name": "paste",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.selectAllElementsInFrame",
        "name": "selectAllElementsInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "canvas",
        },
      },
      {
        "label": "labels.removeAllElementsFromFrame",
        "name": "removeAllElementsFromFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "history",
        },
      },
      {
        "label": "labels.wrapSelectionInFrame",
        "name": "wrapSelectionInFrame",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 5v10a1 1 0 0 0 1 1h10"
            />
            <path
              d="M5 8h10a1 1 0 0 1 1 1v10"
            />
          </g>
        </svg>,
        "keywords": [
          "image",
          "crop",
        ],
        "label": "helpDialog.cropStart",
        "name": "cropEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "menu",
        },
        "viewMode": true,
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
            <path
              d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6"
            />
            <path
              d="M11 21v-6l3 6v-6"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "png",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsPng",
        "name": "copyAsPng",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M14 3v4a1 1 0 0 0 1 1h4"
            />
            <path
              d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"
            />
            <path
              d="M4 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75"
            />
            <path
              d="M10 15l2 6l2 -6"
            />
            <path
              d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3"
            />
          </g>
        </svg>,
        "keywords": [
          "svg",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyAsSvg",
        "name": "copyAsSvg",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "keywords": [
          "text",
          "clipboard",
          "copy",
        ],
        "label": "labels.copyText",
        "name": "copyText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.copyStyles",
        "name": "copyStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2"
            />
            <path
              d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.pasteStyles",
        "name": "pasteStyles",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.group",
        "name": "group",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": null,
        "label": "labels.autoResize",
        "name": "autoResize",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.unbindText",
        "name": "unbindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.bindText",
        "name": "bindText",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "label": "labels.createContainerFromText",
        "name": "wrapTextInContainer",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": [Function],
        "keyTest": [Function],
        "label": "labels.ungroup",
        "name": "ungroup",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "label": "labels.addToLibrary",
        "name": "addToLibrary",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendBackward",
        "name": "sendBackward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 5l0 14"
            />
            <path
              d="M16 9l-4 -4"
            />
            <path
              d="M8 9l4 -4"
            />
          </g>
        </svg>,
        "keyPriority": 40,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringForward",
        "name": "bringForward",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            {
              "transform": "rotate(180deg)",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move down",
          "zindex",
          "layer",
        ],
        "label": "labels.sendToBack",
        "name": "sendToBack",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.50000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 10l0 10"
            />
            <path
              d="M12 10l4 4"
            />
            <path
              d="M12 10l-4 4"
            />
            <path
              d="M4 4l16 0"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "keywords": [
          "move up",
          "zindex",
          "layer",
        ],
        "label": "labels.bringToFront",
        "name": "bringToFront",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M12 3l0 18"
            />
            <path
              d="M16 7l0 10l5 0l-5 -10"
            />
            <path
              d="M8 7l0 10l-5 0l5 -10"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipHorizontal",
        "name": "flipHorizontal",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <g
            strokeWidth={"1.25000"}
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M3 12l18 0"
            />
            <path
              d="M7 16l10 0l-10 5l0 -5"
            />
            <path
              d="M7 8l10 0l-10 -5l0 5"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.flipVertical",
        "name": "flipVertical",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "category": "Elements",
        "keywords": [
          "line",
        ],
        "label": [Function],
        "name": "toggleLinearEditor",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M8.333 11.667a2.917 2.917 0 0 0 4.167 0l3.333-3.334a2.946 2.946 0 1 0-4.166-4.166l-.417.416"
            />
            <path
              d="M11.667 8.333a2.917 2.917 0 0 0-4.167 0l-3.333 3.334a2.946 2.946 0 0 0 4.166 4.166l.417-.416"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": [Function],
        "name": "hyperlink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "action": "click",
          "category": "hyperlink",
        },
      },
      {
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          viewBox="0 0 24 24"
        >
          <React.Fragment>
            <path
              d="M0 0h24v24H0z"
              fill="none"
              stroke="none"
            />
            <path
              d="M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z"
            />
            <path
              d="M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2"
            />
          </React.Fragment>
        </svg>,
        "label": "labels.copyElementLink",
        "name": "copyElementLink",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <g
            strokeWidth="1.25"
          >
            <path
              d="M14.375 6.458H8.958a2.5 2.5 0 0 0-2.5 2.5v5.417a2.5 2.5 0 0 0 2.5 2.5h5.417a2.5 2.5 0 0 0 2.5-2.5V8.958a2.5 2.5 0 0 0-2.5-2.5Z"
            />
            <path
              clipRule="evenodd"
              d="M11.667 3.125c.517 0 .986.21 1.325.55.34.338.55.807.55 1.325v1.458H8.333c-.485 0-.927.185-1.26.487-.343.312-.57.75-.609 1.24l-.005 5.357H5a1.87 1.87 0 0 1-1.326-.55 1.87 1.87 0 0 1-.549-1.325V5c0-.518.21-.987.55-1.326.338-.34.807-.549 1.325-.549h6.667Z"
            />
          </g>
        </svg>,
        "keyTest": [Function],
        "label": "labels.duplicateSelection",
        "name": "duplicateSelection",
        "perform": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      {
        "icon": [Function],
        "keyTest": [Function],
        "label": [Function],
        "name": "toggleElementLock",
        "perform": [Function],
        "predicate": [Function],
        "trackEvent": {
          "category": "element",
        },
      },
      "separator",
      {
        "PanelComponent": [Function],
        "icon": <svg
          aria-hidden="true"
          className=""
          fill="none"
          focusable="false"
          role="img"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          viewBox="0 0 20 20"
        >
          <path
            d="M3.333 5.833h13.334M8.333 9.167v5M11.667 9.167v5M4.167 5.833l.833 10c0 .92.746 1.667 1.667 1.667h6.666c.92 0 1.667-.746 1.667-1.667l.833-10M7.5 5.833v-2.5c0-.46.373-.833.833-.833h3.334c.46 0 .833.373.833.833v2.5"
            strokeWidth="1.25"
          />
        </svg>,
        "keyTest": [Function],
        "label": "labels.delete",
        "name": "deleteSelectedElements",
        "perform": [Function],
        "trackEvent": {
          "action": "delete",
          "category": "element",
        },
      },
    ],
    "left": 0,
    "top": 0,
  },
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id68": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id68": true,
    "id69": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangles from arrow on deletion and rebind on undo > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id68",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": -100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangles from arrow on deletion and rebind on undo > [end of test] element 1 1`] = `
{
  "angle": 0,
  "autoResize": true,
  "backgroundColor": "transparent",
  "boundElements": null,
  "containerId": null,
  "customData": undefined,
  "fillStyle": "solid",
  "fontFamily": 5,
  "fontSize": 20,
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id69",
  "index": "a1",
  "isDeleted": false,
  "lineHeight": "1.25000",
  "link": null,
  "locked": false,
  "opacity": 100,
  "originalText": "ola",
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "text": "ola",
  "textAlign": "left",
  "type": "text",
  "updated": 1,
  "version": 2,
  "verticalAlign": "top",
  "width": 100,
  "x": -200,
  "y": -200,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangles from arrow on deletion and rebind on undo > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 100,
  "id": "id70",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 100,
  "y": -50,
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangles from arrow on deletion and rebind on undo > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id68" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": -100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id69" => Delta {
            "deleted": {
              "angle": 0,
              "autoResize": true,
              "backgroundColor": "transparent",
              "boundElements": null,
              "containerId": null,
              "customData": undefined,
              "fillStyle": "solid",
              "fontFamily": 5,
              "fontSize": 20,
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "lineHeight": "1.25000",
              "link": null,
              "locked": false,
              "opacity": 100,
              "originalText": "ola",
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "text": "ola",
              "textAlign": "left",
              "type": "text",
              "verticalAlign": "top",
              "width": 100,
              "x": -200,
              "y": -200,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id70" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 100,
              "index": "a2",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": -50,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id68": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id69": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangles from arrow on deletion and rebind on undo > [end of test] number of elements 1`] = `3`;

exports[`history > singleplayer undo/redo > should support bidirectional bindings > should unbind rectangles from arrow on deletion and rebind on undo > [end of test] number of renders 1`] = `6`;

exports[`history > singleplayer undo/redo > should support changes in elements' order > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id43": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id43": true,
    "id45": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support changes in elements' order > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id44",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 10,
  "x": 20,
  "y": 20,
}
`;

exports[`history > singleplayer undo/redo > should support changes in elements' order > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id43",
  "index": "a2",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 7,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should support changes in elements' order > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id45",
  "index": "a3",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 10,
  "width": 10,
  "x": 40,
  "y": 40,
}
`;

exports[`history > singleplayer undo/redo > should support changes in elements' order > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id43": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id43" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id44": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id43": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id44" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 20,
              "y": 20,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id45": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id44": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id45" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a2",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 40,
              "y": 40,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id45" => Delta {
            "deleted": {
              "index": "a0V",
            },
            "inserted": {
              "index": "a2",
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id43": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id45": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id45": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id43" => Delta {
            "deleted": {
              "index": "a2",
            },
            "inserted": {
              "index": "Zz",
            },
          },
          "id45" => Delta {
            "deleted": {
              "index": "a3",
            },
            "inserted": {
              "index": "a0",
            },
          },
        },
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support changes in elements' order > [end of test] number of elements 1`] = `3`;

exports[`history > singleplayer undo/redo > should support changes in elements' order > [end of test] number of renders 1`] = `20`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id34": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id40": true,
    "id42": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {
    "id41": true,
  },
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
  ],
  "height": 100,
  "id": "id33",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "A",
  ],
  "height": 100,
  "id": "id34",
  "index": "a1",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 2,
  "width": 100,
  "x": 100,
  "y": 100,
}
`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "id41",
  ],
  "height": 100,
  "id": "id40",
  "index": "a1G",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] element 3 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "id41",
  ],
  "height": 100,
  "id": "id42",
  "index": "a1V",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 3,
  "width": 100,
  "x": 110,
  "y": 110,
}
`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] element 4 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "id38",
  ],
  "height": 100,
  "id": "id37",
  "index": "a2",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 6,
  "width": 100,
  "x": 10,
  "y": 10,
}
`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] element 5 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [
    "id38",
  ],
  "height": 100,
  "id": "id39",
  "index": "a3",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 6,
  "width": 100,
  "x": 110,
  "y": 110,
}
`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id33": true,
              "id34": true,
            },
            "selectedGroupIds": {
              "A": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
            "selectedGroupIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id33" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [
                "A",
              ],
              "height": 100,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id34" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [
                "A",
              ],
              "height": 100,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 100,
              "y": 100,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id40": true,
              "id42": true,
            },
            "selectedGroupIds": {
              "id41": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id33": true,
              "id34": true,
            },
            "selectedGroupIds": {
              "A": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id40" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [
                "id41",
              ],
              "height": 100,
              "index": "a1G",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 10,
              "y": 10,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
          "id42" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [
                "id41",
              ],
              "height": 100,
              "index": "a1V",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 100,
              "x": 110,
              "y": 110,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] number of elements 1`] = `6`;

exports[`history > singleplayer undo/redo > should support duplication of groups, appstate group selection and editing group > [end of test] number of renders 1`] = `18`;

exports[`history > singleplayer undo/redo > should support element creation, deletion and appstate element selection change > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id22": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {},
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support element creation, deletion and appstate element selection change > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id21",
  "index": "a0",
  "isDeleted": false,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 5,
  "width": 10,
  "x": 10,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should support element creation, deletion and appstate element selection change > [end of test] element 1 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id22",
  "index": "a1",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 8,
  "width": 10,
  "x": 20,
  "y": 20,
}
`;

exports[`history > singleplayer undo/redo > should support element creation, deletion and appstate element selection change > [end of test] element 2 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 10,
  "id": "id23",
  "index": "a2",
  "isDeleted": true,
  "link": null,
  "locked": false,
  "opacity": 100,
  "roughness": 1,
  "roundness": {
    "type": 3,
  },
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "rectangle",
  "updated": 1,
  "version": 8,
  "width": 10,
  "x": 40,
  "y": 40,
}
`;

exports[`history > singleplayer undo/redo > should support element creation, deletion and appstate element selection change > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id21": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id21" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 10,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id22": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id21": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id22" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a1",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 20,
              "y": 20,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id23": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id22": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id23" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a2",
              "isDeleted": false,
              "link": null,
              "locked": false,
              "opacity": 100,
              "roughness": 1,
              "roundness": {
                "type": 3,
              },
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "rectangle",
              "width": 10,
              "x": 40,
              "y": 40,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id22": true,
            },
          },
          "inserted": {
            "selectedElementIds": {
              "id23": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id23": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {},
          },
          "inserted": {
            "selectedElementIds": {
              "id22": true,
              "id23": true,
            },
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {
          "id22" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "isDeleted": false,
            },
          },
          "id23" => Delta {
            "deleted": {
              "isDeleted": true,
            },
            "inserted": {
              "isDeleted": false,
            },
          },
        },
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support element creation, deletion and appstate element selection change > [end of test] number of elements 1`] = `3`;

exports[`history > singleplayer undo/redo > should support element creation, deletion and appstate element selection change > [end of test] number of renders 1`] = `27`;

exports[`history > singleplayer undo/redo > should support linear element creation and points manipulation through the editor > [end of test] appState 1`] = `
{
  "activeEmbeddable": null,
  "activeTool": {
    "customType": null,
    "lastActiveTool": null,
    "locked": false,
    "type": "selection",
  },
  "collaborators": Map {},
  "contextMenu": null,
  "croppingElementId": null,
  "currentChartType": "bar",
  "currentHoveredFontFamily": null,
  "currentItemArrowType": "round",
  "currentItemBackgroundColor": "transparent",
  "currentItemEndArrowhead": "arrow",
  "currentItemFillStyle": "solid",
  "currentItemFontFamily": 5,
  "currentItemFontSize": 20,
  "currentItemOpacity": 100,
  "currentItemRoughness": 1,
  "currentItemRoundness": "round",
  "currentItemStartArrowhead": null,
  "currentItemStrokeColor": "#1e1e1e",
  "currentItemStrokeStyle": "solid",
  "currentItemStrokeWidth": 2,
  "currentItemTextAlign": "left",
  "cursorButton": "up",
  "defaultSidebarDockedPreference": false,
  "editingFrame": null,
  "editingGroupId": null,
  "editingLinearElement": null,
  "editingTextElement": null,
  "elementsToHighlight": null,
  "errorMessage": null,
  "exportBackground": true,
  "exportEmbedScene": false,
  "exportScale": 1,
  "exportWithDarkMode": false,
  "featureFlagLibraryButton": false,
  "featureFlagWelcomeScreen": false,
  "fileHandle": null,
  "followedBy": Set {},
  "frameRendering": {
    "clip": true,
    "enabled": true,
    "name": true,
    "outline": true,
  },
  "frameToHighlight": null,
  "gridModeEnabled": false,
  "gridSize": 20,
  "gridStep": 5,
  "height": 0,
  "hoveredElementIds": {},
  "isBindingEnabled": true,
  "isCropping": false,
  "isLoading": false,
  "isResizing": false,
  "isRotating": false,
  "lastPointerDownWith": "mouse",
  "multiElement": null,
  "newElement": null,
  "objectsSnapModeEnabled": false,
  "offsetLeft": 0,
  "offsetTop": 0,
  "openDialog": null,
  "openMenu": null,
  "openPopup": null,
  "openSidebar": null,
  "originSnapOffset": null,
  "pasteDialog": {
    "data": null,
    "shown": false,
  },
  "penDetected": false,
  "penMode": false,
  "pendingImageElementId": null,
  "previousSelectedElementIds": {
    "id26": true,
  },
  "resizingElement": null,
  "scrollX": 0,
  "scrollY": 0,
  "searchMatches": [],
  "selectedElementIds": {
    "id26": true,
  },
  "selectedElementsAreBeingDragged": false,
  "selectedGroupIds": {},
  "selectionElement": null,
  "shouldCacheIgnoreZoom": false,
  "showHyperlinkPopup": false,
  "showWelcomeScreen": true,
  "snapLines": [],
  "startBoundElement": null,
  "stats": {
    "open": false,
    "panels": 3,
  },
  "suggestedBindings": [],
  "theme": "light",
  "toast": null,
  "userToFollow": null,
  "viewBackgroundColor": "#ffffff",
  "viewModeEnabled": false,
  "width": 0,
  "zenModeEnabled": false,
  "zoom": {
    "value": 1,
  },
}
`;

exports[`history > singleplayer undo/redo > should support linear element creation and points manipulation through the editor > [end of test] element 0 1`] = `
{
  "angle": 0,
  "backgroundColor": "transparent",
  "boundElements": null,
  "customData": undefined,
  "elbowed": false,
  "endArrowhead": "arrow",
  "endBinding": null,
  "fillStyle": "solid",
  "frameId": null,
  "groupIds": [],
  "height": 20,
  "id": "id26",
  "index": "a0",
  "isDeleted": false,
  "lastCommittedPoint": [
    20,
    0,
  ],
  "link": null,
  "locked": false,
  "opacity": 100,
  "points": [
    [
      0,
      0,
    ],
    [
      10,
      10,
    ],
    [
      20,
      20,
    ],
  ],
  "roughness": 1,
  "roundness": {
    "type": 2,
  },
  "startArrowhead": null,
  "startBinding": null,
  "strokeColor": "#1e1e1e",
  "strokeStyle": "solid",
  "strokeWidth": 2,
  "type": "arrow",
  "updated": 1,
  "version": 15,
  "width": 20,
  "x": 0,
  "y": 0,
}
`;

exports[`history > singleplayer undo/redo > should support linear element creation and points manipulation through the editor > [end of test] history 1`] = `
History {
  "onHistoryChangedEmitter": Emitter {
    "subscribers": [
      [Function],
      [Function],
    ],
  },
  "redoStack": [],
  "undoStack": [
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedElementIds": {
              "id26": true,
            },
          },
          "inserted": {
            "selectedElementIds": {},
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {
          "id26" => Delta {
            "deleted": {
              "angle": 0,
              "backgroundColor": "transparent",
              "boundElements": null,
              "customData": undefined,
              "elbowed": false,
              "endArrowhead": "arrow",
              "endBinding": null,
              "fillStyle": "solid",
              "frameId": null,
              "groupIds": [],
              "height": 10,
              "index": "a0",
              "isDeleted": false,
              "lastCommittedPoint": [
                10,
                10,
              ],
              "link": null,
              "locked": false,
              "opacity": 100,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  10,
                  10,
                ],
              ],
              "roughness": 1,
              "roundness": {
                "type": 2,
              },
              "startArrowhead": null,
              "startBinding": null,
              "strokeColor": "#1e1e1e",
              "strokeStyle": "solid",
              "strokeWidth": 2,
              "type": "arrow",
              "width": 10,
              "x": 0,
              "y": 0,
            },
            "inserted": {
              "isDeleted": true,
            },
          },
        },
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id26" => Delta {
            "deleted": {
              "lastCommittedPoint": [
                20,
                0,
              ],
              "points": [
                [
                  0,
                  0,
                ],
                [
                  10,
                  10,
                ],
                [
                  20,
                  0,
                ],
              ],
              "width": 20,
            },
            "inserted": {
              "lastCommittedPoint": [
                10,
                10,
              ],
              "points": [
                [
                  0,
                  0,
                ],
                [
                  10,
                  10,
                ],
              ],
              "width": 10,
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "selectedLinearElementId": "id26",
          },
          "inserted": {
            "selectedLinearElementId": null,
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "editingLinearElementId": "id26",
          },
          "inserted": {
            "editingLinearElementId": null,
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {},
          "inserted": {},
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {
          "id26" => Delta {
            "deleted": {
              "height": 20,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  10,
                  10,
                ],
                [
                  20,
                  20,
                ],
              ],
            },
            "inserted": {
              "height": 10,
              "points": [
                [
                  0,
                  0,
                ],
                [
                  10,
                  10,
                ],
                [
                  20,
                  0,
                ],
              ],
            },
          },
        },
      },
    },
    HistoryEntry {
      "appStateChange": AppStateChange {
        "delta": Delta {
          "deleted": {
            "editingLinearElementId": null,
          },
          "inserted": {
            "editingLinearElementId": "id26",
          },
        },
      },
      "elementsChange": ElementsChange {
        "added": Map {},
        "removed": Map {},
        "updated": Map {},
      },
    },
  ],
}
`;

exports[`history > singleplayer undo/redo > should support linear element creation and points manipulation through the editor > [end of test] number of elements 1`] = `1`;

exports[`history > singleplayer undo/redo > should support linear element creation and points manipulation through the editor > [end of test] number of renders 1`] = `21`;
